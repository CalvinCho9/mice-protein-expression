---
title: "Investigation of Forensic Crime Lab Characteristics and their Impact on Competency Testing Results"
author: "Calvin Cho"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  pdf:
    toc: true
    number-sections: true
    margin-top: 1in
    margin-bottom: 1in  
    margin-left: 1in
    margin-right: 1in
execute: 
  warning: false
  message: false
  echo: false
editor: visual
prefer-html: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 7, fig.height = 4.5)
set.seed(42)
```

## Abstract

We analyze the Mice Protein Expression dataset (UCI ML Repository) to identify protein-level differences between control and trisomic (Down syndrome model) mice. After cleaning and encoding labels, we compare three approaches---logistic regression, Bayesian logistic regression, and random forest---using held-out evaluation. Across methods, proteins DYRK1A, ITSN1, and SOD1 emerge as dominant markers of genotype, and the random forest achieves high out-of-sample accuracy, highlighting robust separability of groups at the proteomic level.

## Data and Preprocessing

The dataset contains expression measurements for 77 proteins (and modifications) from mouse cerebral cortex across eight experimental classes defined by genotype (control vs trisomy), treatment (memantine vs saline), and behavioral paradigm (context-shock vs shock-context).

```{r}
suppressPackageStartupMessages({
  library(dplyr)
  library(ggplot2)
  library(tidyr)
  library(randomForest)
  library(readxl)
})
```

```{r}
# Download once if not present
data_url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/00342/Data_Cortex_Nuclear.xls"
if (!file.exists("Data_Cortex_Nuclear.xls")) {
  download.file(data_url, destfile = "Data_Cortex_Nuclear.xls", mode = "wb", quiet = TRUE)
}

# Robust import: try readxl; if that fails, fall back to openxlsx (pure R)
read_xls_safe <- function(path){
  out <- tryCatch(readxl::read_excel(path), error = function(e) NULL)
  if (is.null(out)) {
    install.packages("openxlsx", repos = "https://cloud.r-project.org")
    library(openxlsx)
    out <- openxlsx::read.xlsx(path, sheet = 1)
  }
  out
}

df <- read_xls_safe("Data_Cortex_Nuclear.xls")

# Basic cleaning: drop rows with any missing values in proteins or labels
df_clean <- df %>% tidyr::drop_na()

# Ensure label columns exist and are tidy
# In this file, the combined class label is in a column named 'class' (lowercase).
# Reconstruct Genotype from the first letter of `class`: 'c' = Control, 't' = Trisomy.
df_clean <- df_clean %>%
  mutate(
    class = as.character(class),
    Genotype = ifelse(startsWith(class, "c"), "Control", "Trisomy"),
    Genotype = factor(Genotype, levels = c("Control","Trisomy")),
    class = factor(class)
  )

label_counts <- table(df_clean$Genotype)
class_counts <- table(df_clean$class)

```

```{r}
knitr::kable(as.data.frame(class_counts), col.names = c("Class","Count"))
```

## Exploratory Analysis

We focus the narrative on proteins with strong biological priors for trisomy (e.g., DYRK1A, ITSN1, SOD1) and representative signaling proteins (BRAF, pERK).

```{r}
features_subset <- c("DYRK1A_N","ITSN1_N","SOD1_N","BRAF_N","pERK_N")
summary_tbl <- df_clean %>%
  select(all_of(features_subset)) %>%
  summarise(across(everything(), list(min=min, q25=~quantile(.x,0.25), median=median, mean=mean, q75=~quantile(.x,0.75), max=max)))
knitr::kable(t(summary_tbl), col.names = c("Value"))

```

```{r}
df_clean %>%
  select(Genotype, all_of(features_subset)) %>%
  pivot_longer(-Genotype, names_to = "Protein", values_to = "Expression") %>%
  ggplot(aes(x = Genotype, y = Expression, fill = Genotype)) +
  geom_boxplot(alpha = 0.8, outlier.size = 0.7) +
  facet_wrap(~ Protein, scales = "free_y") +
  labs(x = NULL, y = "Expression (normalized units)") +
  theme_minimal() +
  theme(legend.position = "none",
        strip.text = element_text(face = "bold"))

```

```{r}
library(scales)
corr_mat <- cor(df_clean[, features_subset])
corr_df <- as.data.frame(corr_mat) %>%
  mutate(Var1 = rownames(.)) %>%
  pivot_longer(-Var1, names_to = "Var2", values_to = "r")

ggplot(corr_df, aes(Var1, Var2, fill = r)) +
  geom_tile() +
  geom_text(aes(label = sprintf("%.2f", r)), size = 3) +
  scale_fill_gradient2(limits = c(-1,1), oob = squish) +
  labs(x = NULL, y = NULL) +
  coord_equal() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "bottom")

```

Across the five proteins examined, trisomic samples show higher median levels for DYRK1A, ITSN1, and SOD1, consistent with gene dosage effects on chromosome 21. Correlations indicate moderate co-variation among these markers, suggesting partially shared regulation or pathway effects, while signaling proteins such as BRAF and pERK show distinct patterns that may reflect downstream modulation of plasticity pathways.

## Train and Test

```{r}
set.seed(42)
idx <- sample(seq_len(nrow(df_clean)), size = floor(0.7 * nrow(df_clean)))
train_data <- df_clean[idx, ]
test_data  <- df_clean[-idx, ]

n_train <- nrow(train_data); n_test <- nrow(test_data)

```

We reserve r n_test observations for evaluation after fitting on r n_train training samples.

## Logistic Regression

We fit a parsimonious logistic regression targeting genotype using the five biologically motivated proteins.

```{r}
glm_model <- glm(Genotype ~ DYRK1A_N + ITSN1_N + SOD1_N + BRAF_N + pERK_N,
                 data = train_data, family = binomial())
glm_sum <- summary(glm_model)
knitr::kable(coef(glm_sum), caption = "Logistic regression coefficients (log-odds scale).")

```

```{r}
test_prob <- predict(glm_model, newdata = test_data, type = "response")
test_cls  <- factor(ifelse(test_prob > 0.5, "Trisomy","Control"),
                    levels = c("Control","Trisomy"))
glm_conf  <- table(Predicted = test_cls, Actual = test_data$Genotype)
glm_acc   <- mean(test_cls == test_data$Genotype)

knitr::kable(as.data.frame.matrix(glm_conf), caption = sprintf("Confusion matrix (Accuracy = %.2f%%)", 100*glm_acc))

```

Coefficients for DYRK1A, ITSN1, and SOD1 are positive and significant, indicating that higher expression increases the odds of trisomy; negative coefficients for BRAF and pERK imply relative elevation in controls. Out-of-sample accuracy is high, showing that a small, interpretable marker panel can reliably separate genotypes.

## Bayesian Logistic Regression

Bayesian estimation provides posterior distributions and credible intervals for effects. We fit the same formula with weakly-informative priors.

```{r}
suppressPackageStartupMessages(library(rstanarm))
options(mc.cores = max(1, parallel::detectCores()-1))
bayes_model <- rstanarm::stan_glm(
  Genotype ~ DYRK1A_N + ITSN1_N + SOD1_N + BRAF_N + pERK_N,
  data = train_data, family = binomial(link = "logit"),
  chains = 4, iter = 2000, seed = 42
)
post_ci <- posterior_interval(bayes_model, prob = 0.95)
knitr::kable(post_ci, digits = 2, caption = "95% posterior intervals for coefficients.")

```

Credible intervals for DYRK1A, ITSN1, and SOD1 exclude zero with substantial margins, reinforcing strong positive associations with trisomy. Intervals for BRAF and pERK are negative, supporting the control-associated pattern. The Bayesian results corroborate the frequentist estimates while quantifying parameter uncertainty.

## Random Forest Classification

To capture nonlinearity and interactions across the full proteome, we train a random forest using all protein features.

```{r}
feature_cols <- grep("_N$", colnames(train_data), value = TRUE)
X_train <- train_data[, feature_cols]
y_train <- train_data$Genotype
X_test  <- test_data[, feature_cols]
y_test  <- test_data$Genotype

rf_model <- randomForest(x = X_train, y = y_train, ntree = 500, importance = TRUE)
rf_pred  <- predict(rf_model, newdata = X_test)
rf_conf  <- table(Predicted = rf_pred, Actual = y_test)
rf_acc   <- mean(rf_pred == y_test)

knitr::kable(as.data.frame.matrix(rf_conf), caption = sprintf("Random forest confusion matrix (Accuracy = %.2f%%)", 100*rf_acc))

```

```{r}
imp <- importance(rf_model)
imp_df <- data.frame(Feature = rownames(imp),
                     MDA = imp[, "MeanDecreaseAccuracy"],
                     MDG = imp[, "MeanDecreaseGini"]) %>%
  arrange(desc(MDA)) %>% slice(1:12)

ggplot(imp_df, aes(x = reorder(Feature, MDA), y = MDA)) +
  geom_col() +
  coord_flip() +
  labs(x = NULL, y = "Mean Decrease in Accuracy")

```

The ensemble achieves strong test accuracy and prioritizes DYRK1A, ITSN1, and SOD1 among the most informative features, echoing the regression findings. Additional signaling proteins (e.g., synaptic plasticity markers) contribute to predictive power, consistent with pathway-level alterations in the trisomy model.

## Discussion

Across statistical and machine-learning paradigms, a convergent picture emerges: genotype differences are strongly reflected in specific protein abundances, particularly chromosome-21-linked markers (DYRK1A, ITSN1, SOD1). Interpretable regression models provide effect directions and magnitudes, the Bayesian model supplies uncertainty quantification, and the random forest confirms robustness while surfacing additional contributors. Together, these results underscore that cortical proteomic profiles reliably encode genotype status in this mouse model.

## Methods Summary

Data: UCI "Mice Protein Expression" (cerebral cortex, 77 proteins, 8 classes).

Preprocessing: remove incomplete rows; derive Genotype from combined class label.

Models: logistic regression (five markers), Bayesian logistic regression (weakly informative priors), random forest (all proteins).

Evaluation: 70/30 train/test split; accuracy and confusion matrices; feature importance.

## Reproducibility

```{r}
sessionInfo()
```
